plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.bkc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

/* 
 * this disables creating plain jar that contains all modules, dependencies as well as its classes and resources
 */
jar {
	enabled = false
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'com.mashape.unirest:unirest-java:1.4.9'
	implementation 'net.logstash.logback:logstash-logback-encoder:6.6'
	//implementation 'org.slf4j:slf4j-api:2.0.0-alpha4'
	//implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	//annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'io.jsonwebtoken:jjwt:0.9.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-mail'
	testImplementation 'javax.validation:validation-api:2.0.1.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	testImplementation 'com.mashape.unirest:unirest-java:1.4.9'
	//testImplementation 'ch.qos.logback:logback-classic:1.3.0-alpha10'
}

test {
	useJUnitPlatform()
}
